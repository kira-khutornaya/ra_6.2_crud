{"version":3,"sources":["components/NotesForm.js","components/Note.js","components/NotesContainer.js","components/NotesManager.js","App.js","reportWebVitals.js","index.js"],"names":["NotesForm","props","state","content","onChange","bind","onSubmit","e","target","name","value","this","setState","preventDefault","postData","className","placeholder","required","type","Component","Note","onDelete","onClick","PureComponent","NotesContainer","data","length","map","note","id","url","NotesManager","notes","getData","fetch","method","headers","then","res","json","body","JSON","stringify","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.187dc855.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass NotesForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: '',\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const { postData } = this.props;\n    const { content } = this.state;\n\n    postData(content);\n    this.setState({\n      content: '',\n    });\n  }\n\n  render() {\n    const { content } = this.state;\n\n    return (\n      <form className=\"Form\" onSubmit={this.onSubmit}>\n        <textarea\n          className=\"Form__textbox\"\n          placeholder=\"New Note\"\n          name=\"content\"\n          value={content}\n          onChange={this.onChange}\n          required\n        />\n        <button className=\"Form__btn btn\" type=\"submit\">➤</button>\n      </form>\n    );\n  }\n}\n\nNotesForm.propTypes = {\n  postData: PropTypes.func.isRequired,\n};\n\nexport default NotesForm;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Note extends PureComponent {\n  render() {\n    const { content, onDelete } = this.props;\n\n    return (\n      <div className=\"Note\">\n        <div className=\"Note__text\">{content}</div>\n        <button\n          className=\"Note__remove btn\"\n          type=\"button\"\n          onClick={onDelete}\n        >\n          ✘\n        </button>\n      </div>\n    );\n  }\n}\n\nNote.propTypes = {\n  content: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default Note;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Note from './Note';\n\nclass NotesContainer extends PureComponent {\n  render() {\n    const { data, onDelete } = this.props;\n\n    return (\n      <div className=\"NotesContainer\">\n        {\n          data.length\n            ? data.map(\n              (note) => (\n                <Note\n                  content={note.content}\n                  onDelete={() => onDelete(note.id)}\n                  key={note.id}\n                />\n              ),\n            )\n            : <div>No notes yet</div>\n        }\n      </div>\n    );\n  }\n}\n\nNotesContainer.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default NotesContainer;\n","import React, { Component } from 'react';\nimport NotesForm from './NotesForm';\nimport NotesContainer from './NotesContainer';\n\nconst url = 'https://ra-31-crud.herokuapp.com/notes';\n\nexport default class NotesManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: [],\n    };\n\n    this.onDelete = this.onDelete.bind(this);\n    this.getData = this.getData.bind(this);\n    this.postData = this.postData.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  onDelete(id) {\n    fetch(`${url}/${id}`,\n      {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }).then(this.getData);\n  }\n\n  getData() {\n    fetch(url)\n      .then((res) => res.json())\n      .then((json) => {\n        this.setState({\n          notes: [...json],\n        });\n      });\n  }\n\n  postData(content) {\n    fetch(url,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          content,\n        }),\n      })\n      .then(this.getData);\n  }\n\n  render() {\n    const { notes } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"Notes\">\n          <div className=\"Notes__header\">\n            <h1 className=\"Notes__title\">Notes</h1>\n            <button\n              className=\"Notes__reload btn\"\n              type=\"button\"\n              onClick={this.getData}\n            >\n              ⭮\n            </button>\n          </div>\n\n          <NotesContainer\n            data={notes}\n            onDelete={this.onDelete}\n          />\n\n          <NotesForm postData={this.postData} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport NotesManager from './components/NotesManager';\n\nfunction App() {\n  return <NotesManager />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}